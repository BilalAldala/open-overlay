/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["OverlayEditor"] = factory();
	else
		root["OverlayEditor"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n//# sourceURL=webpack://OverlayEditor/./node_modules/@babel/runtime/helpers/esm/defineProperty.js?");

/***/ }),

/***/ "./src/browser-renderer/BrowserRenderer.js":
/*!*************************************************!*\
  !*** ./src/browser-renderer/BrowserRenderer.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities.js */ \"./src/browser-renderer/utilities.js\");\n/* harmony import */ var _ScriptingContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScriptingContext.js */ \"./src/browser-renderer/ScriptingContext.js\");\n/* harmony import */ var _OpenOverlayRenderer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OpenOverlayRenderer.js */ \"./src/browser-renderer/OpenOverlayRenderer.js\");\n/* harmony import */ var _OpenOverlayOverlay_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./OpenOverlayOverlay.js */ \"./src/browser-renderer/OpenOverlayOverlay.js\");\n/* harmony import */ var _elements__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./elements */ \"./src/browser-renderer/elements/index.js\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n/* import the overlay renderer element and overlay */\n\n\n\n/* import elements */\n\n\n\nclass BrowserRenderer {\n  get elements() {\n    return this._elements;\n  }\n\n  constructor(options) {\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_executeScriptsOnLoad\", true);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_rendererDOM\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_elements\", {});\n\n    if (options) {\n      if (options.executeScriptsOnLoad !== undefined) this._executeScriptsOnLoad = options.executeScriptsOnLoad;\n    }\n\n    this.render = this.render.bind(this);\n    this.renderOverlay = this.renderOverlay.bind(this);\n    this.renderLayer = this.renderLayer.bind(this);\n    this.registerElement = this.registerElement.bind(this);\n    this.unregisterElement = this.unregisterElement.bind(this);\n    this.unregisterAllElements = this.unregisterAllElements.bind(this); // start with default elements\n\n    this._elements = _objectSpread({}, _elements__WEBPACK_IMPORTED_MODULE_5__.default);\n  }\n\n  registerElement(elementName, elementDef) {\n    this._elements[elementName] = elementDef;\n  }\n\n  unregisterElement(elementName) {\n    delete this._elements[elementName];\n  }\n\n  unregisterAllElements() {\n    this._elements = {};\n  }\n\n  render(targetDOM, overlayArray) {\n    let children = targetDOM.children;\n\n    if (children.length > 1) {\n      console.error(\"Cannot render to an element containing children.\");\n      return;\n    }\n\n    if (children.length == 0) {\n      // auto-create the renderer element\n      this._rendererDOM = document.createElement(\"openoverlay-renderer\");\n      targetDOM.appendChild(this._rendererDOM);\n    } else if (children[0] != this._rendererDOM) {\n      console.error(\"Cannot render to an element containing children.\");\n      return;\n    }\n\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.mergeDOM)(this._rendererDOM.rootElement, overlayArray, this.renderOverlay);\n  }\n\n  renderOverlay(overlay, overlayDOM) {\n    if (!overlayDOM) overlayDOM = document.createElement(\"openoverlay-overlay\");\n    if (this._executeScriptsOnLoad) overlayDOM.addEventListener(\"load\", this.executeScripts); // if overlayDOM's srcObject matches this overlay, skip it - no need to update\n\n    if (overlayDOM.srcObject == overlay) return overlayDOM;\n    overlayDOM.renderLayer = this.renderLayer;\n    overlayDOM.id = overlay.id;\n    overlayDOM.assets = overlay.assets;\n    overlayDOM.scripts = overlay.scripts;\n    overlayDOM.settings = overlay.settings; // merge the dom with the object model for layers\n\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.mergeDOM)(overlayDOM, overlay.layers, this.renderLayer);\n    return overlayDOM;\n  }\n\n  renderLayer(layer, layerDOM) {\n    if (!layer.elementName) {\n      console.error(\"Layer has no elementName specified.\");\n      return;\n    }\n\n    if (!layerDOM) {\n      const element = this._elements[layer.elementName];\n\n      if (!element) {\n        console.error(\"Unable to create layer - unsupported element: \" + layer.elementName);\n        return;\n      }\n\n      layerDOM = element.createDOM();\n    } // apply all properties that have changed, except the special ones\n\n\n    for (const [propName, propValue] of Object.entries(layer)) {\n      switch (propName) {\n        case \"id\":\n        case \"elementName\":\n        case \"label\":\n          // ignored properties\n          break;\n\n        default:\n          if (layerDOM[propName] != propValue) layerDOM[propName] = propValue;\n          break;\n      }\n    }\n\n    return layerDOM;\n  }\n\n  executeScripts() {\n    for (const overlay of this._rendererDOM.rootElement.children) {\n      if (overlay.scriptingContext) {\n        console.error(\"You must call resetScripts() before executing scripts again.\");\n        return;\n      }\n\n      overlay.scriptingContext = new _ScriptingContext_js__WEBPACK_IMPORTED_MODULE_2__.default(overlay, overlay.scripts, overlay.assets, overlay.settings, this.renderLayer);\n    }\n  }\n\n  resetScripts() {\n    for (const overlay of this._rendererDOM.rootElement.children) {\n      if (!overlay.scriptingContext) {\n        console.error(\"No current scripting context to reset.\");\n        return;\n      }\n\n      overlay.scriptingContext.destroy();\n      overlay.scriptingContext = null;\n    }\n  }\n\n  sendCommand(command, commandArg, overlayid, layerid) {\n    if (!this._rendererDOM) {\n      console.error(\"Could not send command - renderer not yet initialized.\");\n      return;\n    }\n\n    this._rendererDOM.sendCommand(command, commandArg, overlayid, layerid);\n  }\n\n  getOverlay(overlayid) {\n    if (!this._rendererDOM) {\n      console.error(\"Could not get overlay - renderer not yet initialized.\");\n      return;\n    }\n\n    return this._rendererDOM.getOverlay(overlayid);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BrowserRenderer);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/BrowserRenderer.js?");

/***/ }),

/***/ "./src/browser-renderer/OpenOverlayOverlay.js":
/*!****************************************************!*\
  !*** ./src/browser-renderer/OpenOverlayOverlay.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities.js */ \"./src/browser-renderer/utilities.js\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n // sends events:\n// assets-changed - fires whenever the assets array is changed, including when the overlay is first loaded\n// load - fires when initial loading is complete, meaning all any elements have preloaded and initial assets have loaded\n\nclass OpenOverlayOverlay extends HTMLElement {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_assets\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_assetLoadPromise\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_loadedAssets\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_settings\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_preloadPromises\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_slot\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_scriptingContext\", void 0);\n\n    this._preloadPromises = [];\n    this.onElementPreloading = this.onElementPreloading.bind(this);\n    this.loadAssetsAsync = this.loadAssetsAsync.bind(this);\n    this.assetsAvailable = this.assetsAvailable.bind(this); // watch for child layers to emit preloading events\n\n    this.addEventListener(\"preloading\", this.onElementPreloading);\n  }\n\n  connectedCallback() {\n    this.style.visibility = \"hidden\";\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"settings\", null, () => this._settings, value => {\n      this._settings = value;\n\n      if (this._scriptingContext) {\n        this._scriptingContext.updateSettings(value);\n      }\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"assets\", null, () => this._assets, value => {\n      // if setting assets to the same source object we had before, do nothing\n      if (this._assets == value) return;\n      this._assets = value;\n      this._assetLoadPromise = this.loadAssetsAsync(value);\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"scripts\", null, () => this._scripts, value => {\n      if (this._scripts == value) return;\n      this._scripts = value;\n    });\n    requestAnimationFrame(async () => {\n      // wait for all preloads to complete before displaying the overlay's contents\n      if (this._preloadPromises) await Promise.all(this._preloadPromises); // wait for all assets to load as well\n\n      if (this._assetLoadPromise) await this._assetLoadPromise;\n      this.style.visibility = \"visible\"; // and emit a load event\n\n      this.dispatchEvent(new Event(\"load\"));\n    });\n  }\n\n  disconnectedCallback() {\n    this.releaseAssets();\n  }\n\n  onElementPreloading(evt) {\n    if (evt.detail.promise) this._preloadPromises.push(evt.detail.promise);\n  }\n\n  findAsset(id) {\n    if (!this._loadedAssets) return null;\n    return this._loadedAssets.find(r => r.id == id);\n  }\n\n  assetsAvailable() {\n    return this._loadedAssets != null;\n  }\n\n  releaseAssets() {\n    if (!this._loadedAssets) return;\n\n    for (const asset of this._loadedAssets) URL.revokeObjectURL(asset.objectUrl);\n  }\n\n  loadAssetsAsync(assets) {\n    // if our current asset list has any objectUrls, we need to revoke them to clean up\n    this.releaseAssets();\n    this._loadedAssets = null; // whenever assets are set, immediately generate the assetUrls (asynchronously)\n    // then fire off an assets-changed event when it's done\n    // if there's an assetLoadPromise that hasn't resolved, we're going to cancel it\n\n    if (this._assetLoadPromise) this._assetLoadPromise.cancelled = true; // load each asset and collect the promises\n\n    const pendingPromises = Object.entries(assets).map(([assetKey, assetValue]) => {\n      const asset = _objectSpread(_objectSpread({}, assetValue), {}, {\n        // to make string comparison easier, we'll prepend a # to the id\n        id: \"#\" + assetKey\n      });\n\n      return fetch(asset.src).then(res => {\n        return res.blob().then(blob => {\n          asset.objectUrl = URL.createObjectURL(blob);\n          return asset;\n        });\n      }, error => {\n        console.error(\"Failed to load asset: \" + error);\n        asset.error = error;\n        return asset;\n      });\n    }); // when all assets have loaded, resolve a promise\n\n    const assetLoadPromise = Promise.all(pendingPromises).then(assets => {\n      // if we've cancelled this by setting assets again quickly, bail out\n      if (assetLoadPromise.cancelled) return; // clean up the load promise since it's fulfilled\n\n      this._assetLoadPromise = null; // set locally\n\n      this._loadedAssets = assets; // and tell everyone assets have changed\n\n      this.dispatchEvent(new CustomEvent(\"assets-changed\"));\n    });\n    return assetLoadPromise;\n  }\n\n  getLayer(id) {\n    return (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.findChildById)(this, id);\n  }\n\n  sendCommand(command, commandArg, layerid) {\n    if (layerid === undefined) {\n      for (const layer of this.children) {\n        const target = layer[command];\n\n        if (!target || typeof target !== \"function\") {\n          console.error(`Could not find method '${command}' on overlay/layer ${this.id}/${layerid}`);\n          continue;\n        }\n\n        target(commandArg);\n      }\n\n      return;\n    }\n\n    const layer = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.findChildById)(this, layerid);\n\n    if (!layer) {\n      console.error(`Could not send command to overlay/layer ${this.id}/${layerid} - layer does not exist.`);\n      return;\n    }\n\n    const target = layer[command];\n\n    if (!target || typeof target !== \"function\") {\n      console.error(`Could not find method '${command}' on overlay/layer ${this.id}/${layerid}`);\n      return;\n    }\n\n    target(commandArg);\n  }\n\n}\n\nif (window.customElements) customElements.define(\"openoverlay-overlay\", OpenOverlayOverlay);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayOverlay);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/OpenOverlayOverlay.js?");

/***/ }),

/***/ "./src/browser-renderer/OpenOverlayRenderer.js":
/*!*****************************************************!*\
  !*** ./src/browser-renderer/OpenOverlayRenderer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities */ \"./src/browser-renderer/utilities.js\");\n\n\n\nclass OpenOverlayRenderer extends HTMLElement {\n  get rootElement() {\n    return this._overlayContainer;\n  }\n\n  constructor() {\n    super(); // uses a shadow root\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_overlayContainer\", void 0);\n\n    this.attachShadow({\n      mode: \"open\"\n    });\n    const style = document.createElement(\"style\"); // 1) host styles\n    // 2) default styles for overlays, which will always be the immediate children of the overlay-container\n    // 3) default styles for layers, which will always be the direct children of overlays\\\n\n    style.innerHTML = \"\\\r\n        :host { width:100%;height:100%;display: block; }\\\r\n        :host([hidden]) { display: none; }\\\r\n        slot { width:100%;height:100%; }\\\r\n        slot > openoverlay-overlay { display: block; width: 100%; height: 100%; }\\\r\n        openoverlay-overlay > * { display: block; position: absolute; box-sizing: border-box; object-fit: cover; object-position: center center; overflow: hidden; }\\\r\n        \";\n    this.shadowRoot.append(style);\n    this._overlayContainer = document.createElement(\"div\");\n    this._overlayContainer.className = \"overlay-container\";\n    this.shadowRoot.append(this._overlayContainer); // add the overlay container\n    //this._overlayContainer = document.createElement(\"overlay-container\");\n    //this.shadowRoot.append(this._overlayContainer);\n  }\n\n  getOverlay(overlayid) {\n    if (overlayid === undefined) return this._overlayContainer.firstChild;\n    return (0,_utilities__WEBPACK_IMPORTED_MODULE_1__.findChildById)(this._overlayContainer, overlayid);\n  }\n\n  sendCommand(command, commandArg = null, overlayid = undefined, layerid = undefined) {\n    // commandData = { command, commandArg, overlayid, layerid }\n    // when overlayid = null and layerid = null, dispatch to ALL overlays\n    // when overlayid = X and layerid = null, dispatch to overlay X\n    // when overlayid = X and layerid = Y, dispatch to layer Y\n    // when overlayid = null and layerid = Y, do nothing (INVALID)\n    if (overlayid === undefined) {\n      for (const overlay of this._overlayContainer.children) {\n        const target = overlay[command];\n\n        if (!target || typeof target !== \"function\") {\n          console.error(`Could not find method '${command}' on overlay ${overlayid}`);\n          continue;\n        }\n\n        target(commandArg);\n      }\n\n      return;\n    }\n\n    const overlay = this.getOverlay(overlayid);\n\n    if (!overlay) {\n      console.error(`Could not send command to overlay ${overlayid} - overlay does not exist.`);\n      return;\n    }\n\n    overlay.sendCommand(command, commandArg, layerid);\n  }\n\n}\n\nif (window.customElements) window.customElements.define(\"openoverlay-renderer\", OpenOverlayRenderer);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayRenderer);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/OpenOverlayRenderer.js?");

/***/ }),

/***/ "./src/browser-renderer/ScriptingContext.js":
/*!**************************************************!*\
  !*** ./src/browser-renderer/ScriptingContext.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nconst IMPORT_REGEX = /(import (.+ from )?[\"'])(\\.\\/)(.+)([\"'])/g;\n\nconst compileScript = (scriptingContextId, scriptName, scripts, assets, scriptUrls) => {\n  let scriptText;\n  let requiresCompile;\n\n  if (scriptName.startsWith(\"#\")) {\n    const asset = assets[scriptName];\n\n    if (asset) {\n      scriptText = atob(asset.src.substring(28));\n      console.log({\n        asset,\n        scriptText\n      });\n      requiresCompile = false;\n    }\n  } else {\n    scriptText = scripts[scriptName];\n    requiresCompile = true;\n  }\n\n  if (!scriptText) throw \"Could not find script or asset: \" + scriptName;\n  let blob;\n\n  if (!requiresCompile) {\n    blob = new Blob([`//# sourceURL=${scriptingContextId}/openoverlay/${scriptName}\\n${scriptText}`], {\n      type: \"text/javascript\"\n    });\n  } else {\n    const compiledScript = scriptText.replace(IMPORT_REGEX, (match, pre, pre2, dotSlash, importedScriptName, post) => {\n      // check to see if we've already compiled this script, and if so, return it's url\n      // otherwise, compile the imported script\n      const dependencyUrl = scriptUrls[importedScriptName] || compileScript(scriptingContextId, importedScriptName, scripts, assets, scriptUrls);\n      return pre + dependencyUrl + post;\n    });\n    blob = new Blob([`//# sourceURL=${scriptingContextId}/openoverlay/${scriptName}\\nconst context = window._openoverlayscriptingengine.contexts[${scriptingContextId}];\\nconst { setTimeout, setInterval } = context;\\n${compiledScript}`], {\n      type: \"text/javascript\"\n    });\n  } // now that we have a fully compiled script, create the blob and return a url\n\n\n  const scriptUrl = URL.createObjectURL(blob);\n  scriptUrls[scriptName] = scriptUrl;\n  return scriptUrl;\n};\n\nclass ScriptingContext extends EventTarget {\n  get assets() {\n    return this._assets;\n  }\n\n  get settings() {\n    return this._settings;\n  }\n\n  get overlay() {\n    return this._overlayDOM;\n  }\n\n  constructor(overlayDOM, scripts, assets, settings, renderLayer) {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_id\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_overlayDOM\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_scripts\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_assets\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_settings\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_timeouts\", []);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_intervals\", []);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_scriptUrls\", {});\n\n    this.setTimeout = this.setTimeout.bind(this);\n    this.setInterval = this.setInterval.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    if (!window._openoverlayscriptingengine) throw \"Could not find window._openoverlayscriptingengine\";\n    this._id = window._openoverlayscriptingengine.lastContextId++;\n    this._overlayDOM = overlayDOM;\n    this._scripts = scripts;\n    this._assets = assets;\n    this._settings = settings || {}; // default settings to an empty object\n    // expose renderLayer on the context\n\n    this.renderLayer = renderLayer; // save this scripting context to the global scope\n\n    window._openoverlayscriptingengine.contexts[this._id] = this; // compile scripts\n\n    let compiledMainJs;\n\n    try {\n      compiledMainJs = compileScript(this._id, \"main.js\", scripts, assets, this._scriptUrls); // compileScript returns a blob: url - to execute it, we just import it.\n      // webpackIgnore prevents webpack from trying to parse this\n\n      import(\n      /* webpackIgnore: true */\n      compiledMainJs).catch(err => {\n        console.log(`Error executing script:\\n${err.stack}`, {\n          t: typeof err,\n          lineNumber: err.lineNumber\n        });\n      });\n    } catch (err) {\n      console.log(`Error compiling script:\\n${err}`);\n    }\n  }\n\n  setTimeout(callback, delay) {\n    // call JS's builtin function\n    const timeoutId = setTimeout(callback, delay);\n\n    this._timeouts.push(timeoutId);\n  }\n\n  setInterval(callback, period) {\n    // call JS's builtin function\n    const intervalId = setInterval(callback, period);\n\n    this._intervals.push(intervalId);\n  }\n\n  updateSettings(settings) {\n    this._settings = settings;\n    this.dispatchEvent(new CustomEvent(\"settings-changed\"));\n  }\n\n  destroy() {\n    // emit an event for scripts to clean themselves up\n    this.dispatchEvent(new CustomEvent(\"destroy\")); // clear timeouts/intervals\n\n    for (const timeout of this._timeouts) clearTimeout(timeout);\n\n    for (const interval of this._intervals) clearInterval(interval); // release any scriptUrls\n\n\n    for (const scriptUrl of Object.values(this._scriptUrls)) URL.revokeObjectURL(scriptUrl); // delete the script context from global state\n\n\n    delete window._openoverlayscriptingengine.contexts[this._id];\n  }\n\n}\n\nif (!window._openoverlayscriptingengine) {\n  window._openoverlayscriptingengine = {\n    lastContextId: 1,\n    contexts: {}\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScriptingContext);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/ScriptingContext.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/DOMElementBase.js":
/*!*********************************************************!*\
  !*** ./src/browser-renderer/elements/DOMElementBase.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities.js */ \"./src/browser-renderer/utilities.js\");\n\n\n\nclass DOMElementBase extends HTMLElement {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_name\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_overlay\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_assetReferences\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_initialized\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_hostStyle\", void 0);\n\n    this._assetReferences = {}; //this.attachShadow({ mode: \"open\" });\n    // set the default style for this element\n    //const style = document.createElement(\"style\");\n    //style.textContent = \":host { display: block; position: absolute; box-sizing: border-box; object-fit: contain; object-position: center center; } :host([hidden]) { display: none; }\";\n    //this.shadowRoot.append(style);\n  }\n\n  connectedCallback() {\n    this._initialized = true;\n    this._overlay = this.closest(\"openoverlay-overlay\");\n    if (!this._overlay) throw \"Layer elements must be a descendant of an openoverlay-overlay element.\"; // set up common properties\n\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"hidden\", false, () => this._hidden, value => {\n      this._hidden = value;\n      this.style.visibility = value ? \"hidden\" : \"visible\";\n\n      if (this.onHiddenChanged) {\n        this.onHiddenChanged(value);\n      }\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"top\", 0, () => this._top, value => {\n      this._top = value;\n      this.style.top = value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"left\", 0, () => this._left, value => {\n      this._left = value;\n      this.style.left = value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"width\", 0, () => this._width, value => {\n      this._width = value;\n      this.style.width = value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"height\", 0, () => this._height, value => {\n      this._height = value;\n      this.style.height = value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"backgroundColor\", null, () => this._backgroundColor, value => {\n      this._backgroundColor = value;\n      this.style.backgroundColor = value || null;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"border\", null, () => this._border, value => {\n      this._border = value;\n      this.style.border = value || null;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"borderRadius\", null, () => this._borderRadius, value => {\n      this._borderRadius = value;\n      this.style.borderRadius = value || null;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"opacity\", null, () => this._opacity, value => {\n      this._opacity = value;\n      this.style.opacity = value || null;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"boxShadow\", null, () => this._boxShadow, value => {\n      this._boxShadow = value;\n      this.style.boxShadow = value || null;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"filter\", null, () => this._filter, value => {\n      if (this._filter != value) {\n        this._filter = value;\n        this.style.filter = value || null;\n      }\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"transform\", null, () => this._transform, value => {\n      if (this._transform != value) {\n        this._transform = value;\n        this.style.transform = value || null;\n      }\n    });\n  }\n\n  referenceAsset(key, id) {\n    this._assetReferences[key] = id;\n  }\n\n  unreferenceAsset(key) {\n    delete this._assetReferences[key];\n  }\n\n  hasAssetReference(key) {\n    return this._assetReferences[key] != null;\n  }\n\n  getAssetReferences() {\n    return Object.values(this._assetReferences);\n  }\n\n  disconnectedCallback() {}\n\n} // this is a base class, no need to register with customElements\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DOMElementBase);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/DOMElementBase.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/OpenOverlayIframe.js":
/*!************************************************************!*\
  !*** ./src/browser-renderer/elements/OpenOverlayIframe.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities.js */ \"./src/browser-renderer/utilities.js\");\n/* harmony import */ var _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DOMElementBase.js */ \"./src/browser-renderer/elements/DOMElementBase.js\");\n\n\n\n\nclass OpenOverlayIframe extends _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_2__.default {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_iframe\", void 0);\n\n    this._iframe = document.createElement(\"iframe\");\n    this._iframe.style = \"height: 100%; width: 100%; object-fit: inherit; object-position: inherit\";\n    this.onAssetsChanged = this.onAssetsChanged.bind(this);\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    }\n\n    super.connectedCallback();\n    this.append(this._iframe);\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"src\", null, () => this._src, value => {\n      // unreference prior asset if needed\n      if (this._src && this._src.startsWith(\"#\")) this.unreferenceAsset(\"src\"); // handle asset references (starting with #)\n\n      if (value != null && value.startsWith(\"#\")) {\n        // ensure assets are available before proceeding\n        if (this._overlay.assetsAvailable()) {\n          const asset = this._overlay.findAsset(value);\n\n          if (asset != null) {\n            this.referenceAsset(\"src\", value);\n            this._iframe.src = asset.objectUrl;\n          } else {\n            console.error(\"Could not find asset \" + value);\n            this._iframe.src = null;\n          }\n        }\n      } else {\n        this._iframe.src = value;\n      }\n\n      if (value) {\n        const iframeLoadPromise = new Promise(resolve => {\n          const onLoad = () => {\n            this._iframe.removeEventListener(\"load\", onLoad);\n\n            resolve();\n          };\n\n          this._iframe.addEventListener(\"load\", onLoad);\n        });\n        this.dispatchEvent(new CustomEvent(\"preloading\", {\n          detail: {\n            promise: iframeLoadPromise\n          },\n          bubbles: true\n        }));\n      }\n\n      this._src = value;\n    }); // trigger a set to src whenever assets change\n\n    this._overlay.addEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._overlay.removeEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  onAssetsChanged() {\n    this.src = this._src;\n  }\n\n}\n\nif (window.customElements) customElements.define(\"openoverlay-iframe\", OpenOverlayIframe);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayIframe);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/OpenOverlayIframe.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/OpenOverlayImage.js":
/*!***********************************************************!*\
  !*** ./src/browser-renderer/elements/OpenOverlayImage.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities.js */ \"./src/browser-renderer/utilities.js\");\n/* harmony import */ var _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DOMElementBase.js */ \"./src/browser-renderer/elements/DOMElementBase.js\");\n\n\n\n\nclass OpenOverlayImage extends _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_2__.default {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_img\", void 0);\n\n    this._img = document.createElement(\"img\");\n    this._img.style = \"height: 100%; width: 100%; object-fit: inherit; object-position: inherit\";\n    this.getNaturalDimensions = this.getNaturalDimensions.bind(this);\n    this.onAssetsChanged = this.onAssetsChanged.bind(this);\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    }\n\n    super.connectedCallback(); // append the image\n\n    this.append(this._img);\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"src\", null, () => this._src, value => {\n      // unreference prior asset if needed\n      if (this._src && this._src.startsWith(\"#\")) this.unreferenceAsset(\"src\"); // handle asset references (starting with #)\n\n      if (value != null && value.startsWith(\"#\")) {\n        // ensure assets are available before proceeding\n        if (this._overlay.assetsAvailable()) {\n          const asset = this._overlay.findAsset(value);\n\n          if (asset != null) {\n            this.referenceAsset(\"src\", value);\n            this._img.src = asset.objectUrl;\n          } else {\n            console.error(\"Could not find asset \" + value);\n            this._img.src = null;\n          }\n        }\n      } else {\n        this._img.src = value;\n      }\n\n      this._src = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"objectFit\", null, () => this._objectFit, value => {\n      this._objectFit = value;\n      this._img.style.objectFit = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.makeProperty)(this, \"objectPosition\", null, () => this._objectPosition, value => {\n      this._objectPosition = value;\n      this._img.style.objectPosition = value;\n    }); // trigger a set to src whenever assets change and we have an active asset reference\n\n    this._overlay.addEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._overlay.removeEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  onAssetsChanged() {\n    // whenever assets change, re-call the src setter with the existing value to update asset references and stuff\n    this.src = this._src;\n  }\n\n  getNaturalDimensions() {\n    if (!this._img) return null;\n    return {\n      width: this._img.naturalWidth,\n      height: this._img.naturalHeight\n    };\n  }\n\n}\n\nif (window.customElements) customElements.define(\"openoverlay-image\", OpenOverlayImage);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayImage);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/OpenOverlayImage.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/OpenOverlayRectangle.js":
/*!***************************************************************!*\
  !*** ./src/browser-renderer/elements/OpenOverlayRectangle.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOMElementBase.js */ \"./src/browser-renderer/elements/DOMElementBase.js\");\n\n\nclass OpenOverlayRectangle extends _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    }\n\n    super.connectedCallback();\n  }\n\n}\n\nif (window.customElements) customElements.define(\"openoverlay-rectangle\", OpenOverlayRectangle);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayRectangle);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/OpenOverlayRectangle.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/OpenOverlayText.js":
/*!**********************************************************!*\
  !*** ./src/browser-renderer/elements/OpenOverlayText.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DOMElementBase.js */ \"./src/browser-renderer/elements/DOMElementBase.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities.js */ \"./src/browser-renderer/utilities.js\");\n\n\n\n\nclass OpenOverlayText extends _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_1__.default {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_textDom\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_textShadow\", void 0);\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    } // default styles\n\n\n    if (this.width === undefined) {\n      this.width = 1;\n    }\n\n    if (this.height === undefined) {\n      this.height = 1;\n    }\n\n    this.style.fontFamily = \"Arial\";\n    this.style.fontSize = \"60px\";\n    this.style.color = \"rgba(255,255,255,1)\";\n    this.style.display = \"flex\";\n    this.style.alignItems = \"flex-start\";\n    this.style.justifyContent = \"flex-start\";\n    this.style.whiteSpace = \"pre\";\n    this.style.overflow = \"visible\"; // styles will be overridden by the DOMElementBase super class\n\n    super.connectedCallback();\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"text\", \"\", () => this.innerText, value => {\n      this.innerText = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"font\", \"\", () => this._font, value => {\n      this._font = value;\n      this.style.fontFamily = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"fontSrc\", null, () => this._fontSrc, value => {\n      this._fontSrc = value;\n      this.onFontSrcChanged();\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"fontSize\", null, () => this._fontSize, value => {\n      this._fontSize = value;\n      this.style.fontSize = value == null ? null : value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"fontColor\", null, () => this._fontColor, value => {\n      this._fontColor = value;\n      this.style.color = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"wrap\", null, () => this._wrap, value => {\n      this._wrap = value;\n      this.style.whiteSpace = value ? \"pre-wrap\" : \"pre\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"letterSpacing\", null, () => this._letterSpacing, value => {\n      this._letterSpacing = value;\n      this.style.letterSpacing = value == null ? null : value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"lineHeight\", null, () => this._lineHeight, value => {\n      this._lineHeight = value;\n      this.style.lineHeight = value == null ? null : value + \"px\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"textShadow\", null, () => this._textShadow, value => {\n      this._textShadow = value;\n      this.style.textShadow = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"bold\", null, () => this._bold, value => {\n      this._bold = value;\n      this.style.fontWeight = value ? \"bold\" : \"normal\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"italic\", null, () => this._italic, value => {\n      this._italic = value;\n      this.style.fontStyle = value ? \"italic\" : \"normal\";\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"underline\", null, () => this._underline, value => {\n      this._underline = value;\n      this.style.textDecoration = value ? \"underline\" : \"none\";\n    }); // \"left\", \"center\", \"right\"\n\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"hAlign\", null, () => this._hAlign, value => {\n      this._hAlign = value;\n\n      switch (value) {\n        case \"left\":\n          this.style.textAlign = \"left\";\n          this.style.justifyContent = \"flex-start\";\n          break;\n\n        case \"center\":\n          this.style.textAlign = \"center\";\n          this.style.justifyContent = \"center\";\n          break;\n\n        case \"right\":\n          this.style.textAlign = \"right\";\n          this.style.justifyContent = \"flex-end\";\n          break;\n\n        default:\n          break;\n      }\n    }); // \"top\", \"center\", \"bottom\"\n\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"vAlign\", null, () => this._vAlign, value => {\n      this._vAlign = value;\n\n      switch (value) {\n        case \"top\":\n          this.style.alignItems = \"flex-start\";\n          break;\n\n        case \"center\":\n          this.style.alignItems = \"center\";\n          break;\n\n        case \"bottom\":\n          this.style.alignItems = \"flex-end\";\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n  }\n\n  onFontSrcChanged() {\n    // if _fontSrc is not specified, do nothing\n    if (!this._fontSrc) return null;\n    if (!window._loadedFonts) window._loadedFonts = []; // if we've already loaded this font, return immediately\n\n    if (window._loadedFonts.includes(this._fontSrc)) return; // if we've gotten here, we need to load the google font.\n\n    const preloadPromise = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.loadFont)(this._fontSrc).then(r => {\n      window._loadedFonts.push(this._fontSrc);\n    });\n    this.dispatchEvent(new CustomEvent(\"preloading\", {\n      detail: {\n        promise: preloadPromise\n      },\n      bubbles: true\n    }));\n  }\n\n}\n\nif (window.customElements) customElements.define(\"openoverlay-text\", OpenOverlayText);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OpenOverlayText);\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/OpenOverlayText.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/OpenOverlayVideo.js":
/*!***********************************************************!*\
  !*** ./src/browser-renderer/elements/OpenOverlayVideo.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpenOverlayVideo\": () => (/* binding */ OpenOverlayVideo),\n/* harmony export */   \"OpenOverlayVideoYouTube\": () => (/* binding */ OpenOverlayVideoYouTube)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DOMElementBase.js */ \"./src/browser-renderer/elements/DOMElementBase.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities.js */ \"./src/browser-renderer/utilities.js\");\n\n\n\nconst YOUTUBE_URL_REGEX = /.*(?:www\\.youtube\\.com\\/(?:(?:watch\\?v=)|(?:embed\\/))|(?:youtu\\.be\\/))([a-z0-9]+)(?:\\?(?:(?:t)|(?:start))=(\\d+))?/i;\n\nfunction getYoutubeVideoId(url) {\n  const match = url.match(YOUTUBE_URL_REGEX);\n  return match ? match[1] : null;\n}\n\nclass OpenOverlayVideo extends _DOMElementBase_js__WEBPACK_IMPORTED_MODULE_1__.default {\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_subelement\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_isPlaying\", void 0);\n\n    this.ensureSubelement = this.ensureSubelement.bind(this);\n    this.getNaturalDimensions = this.getNaturalDimensions.bind(this);\n    this.onAssetsChanged = this.onAssetsChanged.bind(this);\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.stop = this.stop.bind(this);\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    }\n\n    super.connectedCallback();\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"autoplay\", false, () => this._autoplay, value => {\n      this._autoplay = value;\n      if (this._subelement) this._subelement.autoplay = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"src\", null, () => this._src, value => {\n      // unreference prior asset if needed\n      if (this._src && this._src.startsWith(\"#\")) this.unreferenceAsset(\"src\"); // check if this is a youtube video URL\n\n      const youtubeVideoId = getYoutubeVideoId(value);\n      this.ensureSubelement(youtubeVideoId != null);\n      this._subelement.style.objectFit = this._objectFit || \"cover\";\n      this._subelement.style.objectPosition = this._objectPosition || \"center center\";\n      this._subelement.autoplay = this._autoplay;\n      this._subelement.videoId = youtubeVideoId;\n\n      if (!youtubeVideoId) {\n        if (value.startsWith(\"#\")) {\n          if (this._overlay.assetsAvailable()) {\n            const asset = this._overlay.findAsset(value);\n\n            if (asset) {\n              this.referenceAsset(\"src\", value);\n              this._subelement.src = asset ? asset.objectUrl : null;\n            } else {\n              console.error(\"Could not find asset \" + value);\n              this._subelement.src = null;\n            }\n          }\n        } else {\n          this._subelement.src = value;\n        }\n      }\n\n      this._src = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"volume\", null, () => this._volume, value => {\n      this._volume = value;\n      this._subelement.volume = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"objectFit\", null, () => this._objectFit, value => {\n      this._objectFit = value;\n      this._subelement.style.objectFit = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"objectPosition\", null, () => this._objectPosition, value => {\n      this._objectPosition = value;\n      this._subelement.style.bjectPosition = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"currentTime\", 0, () => this._subelement.currentTime, value => {\n      this._subelement.currentTime = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"duration\", 0, () => this._subelement.duration, value => {}); // trigger a set to src whenever assets change and we have an active asset reference\n\n    this._overlay.addEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._overlay.removeEventListener(\"assets-changed\", this.onAssetsChanged);\n  }\n\n  onAssetsChanged() {\n    this.src = this._src;\n  }\n\n  onCommand({\n    detail: {\n      command,\n      commandArg,\n      settings,\n      layerid\n    }\n  }) {\n    if (layerid == this.id) {\n      switch (command) {\n        case \"setCurrentTime\":\n          this._subelement.currentTime = commandArg;\n          break;\n\n        case \"registerForStatusEvents\":\n          console.log(\"got status events yo\", commandArg);\n          this.break;\n\n        case \"unregisterForStatusEvents\":\n          console.log(\"got UNREG status events yo\", commandArg);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  ensureSubelement(isYoutube) {\n    if (isYoutube && !(this._subelement instanceof OpenOverlayVideoYouTube)) {\n      if (this._subelement) this.removeChild(this._subelement);\n      this._subelement = document.createElement(\"openoverlay-video-youtube\");\n      this.appendChild(this._subelement);\n    } else if (!isYoutube && !(this._subelement instanceof HTMLVideoElement)) {\n      if (this._subelement) this.removeChild(this._subelement);\n      this._subelement = document.createElement(\"video\");\n      this._subelement.style = \"width:100%;height:100%;\";\n      this.appendChild(this._subelement);\n    }\n  }\n\n  getNaturalDimensions() {\n    // youtube doesn't provide an API to get video sizes (or even aspect ratios), so we'll fix this to a good default\n    // 1280x720 should look good in most cases\n    if (this._subelement instanceof OpenOverlayVideoYouTube) return {\n      width: 1280,\n      height: 720\n    };\n    if (this._subelement instanceof HTMLVideoElement) return {\n      width: this._subelement.videoWidth,\n      height: this._subelement.videoHeight\n    };\n    return null;\n  }\n\n  onHiddenChanged(hidden) {\n    if (this._isPlaying) {\n      if (hidden) this._subelement.pause();else this._subelement.play();\n    }\n  }\n\n  play() {\n    if (!this._subelement) {\n      console.error(\"Subelement not ready.\");\n      return;\n    }\n\n    this._subelement.play();\n  }\n\n  pause() {\n    if (!this._subelement) {\n      console.error(\"Subelement not ready.\");\n      return;\n    }\n\n    this._subelement.pause();\n  }\n\n  stop() {\n    if (!this._subelement) {\n      console.error(\"Subelement not ready.\");\n      return;\n    }\n\n    this._subelement.pause();\n\n    this._subelement.currentTime = 0;\n  }\n\n}\n\nclass OpenOverlayVideoYouTube extends HTMLElement {\n  get autoplay() {\n    return this._autoplay;\n  }\n\n  set autoplay(value) {\n    this._autoplay = value;\n  }\n\n  constructor() {\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_target\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_apiReadyPromise\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_playerReadyPromise\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(this, \"_lastPlayer\", void 0);\n\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this._getVideoUrl = this._getVideoUrl.bind(this);\n    this._ensureYoutubeAPILoaded = this._ensureYoutubeAPILoaded.bind(this);\n    const wrapper = document.createElement(\"div\");\n    wrapper.style = \"overflow:hidden;height:100%;width:100%;\";\n    this.shadowRoot.append(wrapper);\n    const interactionBlocker = document.createElement(\"div\");\n    interactionBlocker.style = \"position:absolute;top:0;left:0;width:100%;height:100%;\";\n    wrapper.append(interactionBlocker);\n    const target = document.createElement(\"div\");\n    wrapper.append(target);\n    this._target = target;\n\n    this._ensureYoutubeAPILoaded();\n  }\n\n  _getVideoUrl() {\n    return `http://www.youtube.com/v/${this._videoId}?version=3`;\n  }\n\n  _ensureYoutubeAPILoaded() {\n    this._apiReadyPromise = new Promise(resolve => {\n      // if window.YT is defined, we're already loaded\n      if (window.YT) {\n        resolve();\n        return;\n      } // look through the header for the API script to determine if some other code is currently loading the youtube API script\n      // otherwise, we need to load the iframe API\n\n\n      let youtubeApiScriptElement = document.querySelector(\"script[src='https://www.youtube.com/iframe_api']\");\n\n      if (!youtubeApiScriptElement) {\n        youtubeApiScriptElement = document.createElement(\"script\");\n        youtubeApiScriptElement.src = \"https://www.youtube.com/iframe_api\";\n        document.head.append(youtubeApiScriptElement);\n      }\n\n      if (window.onYouTubeIframeAPIReady) {\n        const existingApiReadyFunction = window.onYouTubeIframeAPIReady;\n\n        window.onYouTubeIframeAPIReady = () => {\n          existingApiReadyFunction();\n          resolve();\n        };\n      } else {\n        window.onYouTubeIframeAPIReady = resolve;\n      }\n    }); // dispatch a preloading event so the overlay won't show until we've got something to render\n\n    this.dispatchEvent(new CustomEvent(\"preloading\", {\n      detail: {\n        promise: this._apiReadyPromise\n      },\n      bubbles: true\n    }));\n  }\n\n  connectedCallback() {\n    if (this._initialized) {\n      return;\n    }\n\n    this._initialized = true;\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"videoId\", null, () => this._videoId, value => {\n      this._videoId = value; // update the youtube player when video changes\n\n      if (this._playerReadyPromise) {\n        this._playerReadyPromise.then(player => {\n          player.stopVideo();\n\n          if (this._videoId) {\n            if (this._autoplay) player.loadVideoById(this._videoId);else player.cueVideoById(this._videoId);\n          }\n        });\n      }\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"autoplay\", null, () => this._autoplay, value => {\n      this._autoplay = value;\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"currentTime\", null, () => this._lastPlayer ? this._lastPlayer.getCurrentTime() : 0, value => {\n      if (!this._lastPlayer) {\n        return;\n      }\n\n      this._lastPlayer.seekTo(value);\n    });\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"duration\", null, () => this._lastPlayer ? this._lastPlayer.getDuration() : 0, value => {});\n    (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.makeProperty)(this, \"volume\", null, () => this._volume, value => {\n      this._volume = value;\n      if (this._lastPlayer) this._lastPlayer.setVolume(value * 100);\n    });\n    this._playerReadyPromise = new Promise(resolve => {\n      this._apiReadyPromise.then(() => {\n        const player = new YT.Player(this._target, {\n          width: \"100%\",\n          height: \"100%\",\n          playerVars: {\n            'controls': 0,\n            'modestbranding': 1\n          },\n          events: {\n            onReady: () => {\n              this._lastPlayer = player;\n\n              if (this._volume) {\n                player.setVolume(this._volume * 100);\n              }\n\n              resolve(player);\n            }\n          }\n        });\n      });\n    });\n    this.dispatchEvent(new CustomEvent(\"preloading\", {\n      detail: {\n        promise: this._playerReadyPromise\n      },\n      bubbles: true\n    }));\n  }\n\n  disconnectedCallback() {}\n\n  pause() {\n    if (!this._lastPlayer) {\n      console.error(\"Got pause() before player was loaded.\");\n      return;\n    }\n\n    this._lastPlayer.pauseVideo();\n  }\n\n  play() {\n    if (!this._lastPlayer) {\n      console.error(\"Got play() before player was loaded.\");\n      return;\n    }\n\n    this._lastPlayer.playVideo();\n  }\n\n}\n\nif (window.customElements) {\n  customElements.define(\"openoverlay-video\", OpenOverlayVideo);\n  customElements.define(\"openoverlay-video-youtube\", OpenOverlayVideoYouTube);\n}\n\n\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/OpenOverlayVideo.js?");

/***/ }),

/***/ "./src/browser-renderer/elements/index.js":
/*!************************************************!*\
  !*** ./src/browser-renderer/elements/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _OpenOverlayIframe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OpenOverlayIframe.js */ \"./src/browser-renderer/elements/OpenOverlayIframe.js\");\n/* harmony import */ var _OpenOverlayImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OpenOverlayImage.js */ \"./src/browser-renderer/elements/OpenOverlayImage.js\");\n/* harmony import */ var _OpenOverlayRectangle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OpenOverlayRectangle.js */ \"./src/browser-renderer/elements/OpenOverlayRectangle.js\");\n/* harmony import */ var _OpenOverlayText_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OpenOverlayText.js */ \"./src/browser-renderer/elements/OpenOverlayText.js\");\n/* harmony import */ var _OpenOverlayVideo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./OpenOverlayVideo.js */ \"./src/browser-renderer/elements/OpenOverlayVideo.js\");\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  rectangle: {\n    createDOM: () => document.createElement(\"openoverlay-rectangle\"),\n    elementName: \"rectangle\",\n    name: \"Rectangle\",\n    icon: \"square\",\n    preserveAspect: false,\n    defaults: {\n      top: 0,\n      left: 0,\n      width: 640,\n      height: 360,\n      backgroundColor: \"#FF0000\"\n    }\n  },\n  image: {\n    createDOM: () => document.createElement(\"openoverlay-image\"),\n    elementName: \"image\",\n    name: \"Image\",\n    icon: \"media\",\n    preserveAspect: true,\n    editors: {\n      image: {\n        type: \"config-form\",\n        label: \"Image\",\n        permanent: true,\n        configFormParameters: [{\n          name: \"src\",\n          displayName: \"Url/Asset\",\n          type: \"assetUrl\",\n          accept: \"image/*\",\n          inline: true\n        }],\n        mapPropsFromLayer: ({\n          src\n        }) => ({\n          src\n        }),\n        mapPropsToLayer: ({\n          src\n        }) => ({\n          src\n        })\n      }\n    },\n    defaults: {\n      top: 0,\n      left: 0,\n      width: 400,\n      height: 400\n    }\n  },\n  iframe: {\n    createDOM: () => document.createElement(\"openoverlay-iframe\"),\n    elementName: \"iframe\",\n    name: \"Iframe\",\n    icon: \"globe-network\",\n    preserveAspect: false,\n    editors: {\n      iframe: {\n        type: \"config-form\",\n        label: \"Iframe\",\n        permanent: true,\n        configFormParameters: [{\n          name: \"src\",\n          type: \"assetUrl\",\n          displayName: \"Url/Asset\",\n          accept: \"text/html\"\n        }],\n        mapPropsFromLayer: ({\n          src\n        }) => ({\n          src\n        }),\n        mapPropsToLayer: ({\n          src\n        }) => ({\n          src\n        })\n      }\n    },\n    defaults: {\n      top: 0,\n      left: 0,\n      width: 1920,\n      height: 1080,\n      backgroundColor: \"#FF0000\"\n    }\n  },\n  text: {\n    createDOM: () => document.createElement(\"openoverlay-text\"),\n    elementName: \"text\",\n    name: \"Text\",\n    icon: \"new-text-box\",\n    preserveAspect: false,\n    usesFont: true,\n    editors: {\n      text: {\n        type: \"config-form\",\n        label: \"Text\",\n        permanent: true,\n        configFormParameters: [{\n          name: \"text\",\n          type: \"textarea\",\n          immediate: true\n        }],\n        mapPropsFromLayer: ({\n          text\n        }) => ({\n          text\n        }),\n        mapPropsToLayer: ({\n          text\n        }) => ({\n          text\n        })\n      }\n    },\n    defaults: {\n      top: 0,\n      left: 0,\n      width: 400,\n      height: 400,\n      font: \"Arial\",\n      fontSize: 60,\n      fontColor: \"rgba(255,255,255,1)\",\n      wrap: false,\n      hAlign: \"left\",\n      vAlign: \"top\",\n      letterSpacing: 0,\n      lineHeight: 0,\n      text: \"text\"\n    }\n  },\n  video: {\n    createDOM: () => document.createElement(\"openoverlay-video\"),\n    elementName: \"video\",\n    name: \"Video\",\n    icon: \"video\",\n    preserveAspect: true,\n    usesMediaControls: true,\n    editors: {\n      video: {\n        type: \"config-form\",\n        label: \"Video\",\n        permanent: true,\n        configFormParameters: [{\n          name: \"src\",\n          type: \"assetUrl\",\n          displayName: \"Url/Asset\",\n          accept: \"video/*\",\n          inline: true\n        }, {\n          name: \"volume\",\n          type: \"slider\",\n          displayName: \"Volume\",\n          min: 0,\n          max: 100,\n          step: 1,\n          inline: true,\n          immediate: true\n        }, {\n          name: \"autoplay\",\n          type: \"buttongroup\",\n          displayName: \"Autoplay\",\n          inline: true,\n          options: [{\n            label: \"On\",\n            value: true\n          }, {\n            label: \"Off\",\n            value: false\n          }]\n        }, {\n          name: \"loop\",\n          type: \"buttongroup\",\n          displayName: \"Looping\",\n          inline: true,\n          options: [{\n            label: \"On\",\n            value: true\n          }, {\n            label: \"Off\",\n            value: false\n          }]\n        }],\n        mapPropsFromLayer: ({\n          src,\n          volume,\n          autoplay,\n          loop\n        }) => ({\n          src,\n          volume: volume * 100,\n          autoplay,\n          loop\n        }),\n        mapPropsToLayer: ({\n          src,\n          volume,\n          autoplay,\n          loop\n        }) => ({\n          src,\n          volume: volume / 100,\n          autoplay,\n          loop\n        })\n      }\n    },\n    defaults: {\n      top: 0,\n      left: 0,\n      width: 1280,\n      height: 720,\n      autoplay: true,\n      loop: false,\n      volume: 1\n    }\n  }\n});\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/elements/index.js?");

/***/ }),

/***/ "./src/browser-renderer/utilities.js":
/*!*******************************************!*\
  !*** ./src/browser-renderer/utilities.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeProperty\": () => (/* binding */ makeProperty),\n/* harmony export */   \"loadFont\": () => (/* binding */ loadFont),\n/* harmony export */   \"mergeDOM\": () => (/* binding */ mergeDOM),\n/* harmony export */   \"pruneChildren\": () => (/* binding */ pruneChildren),\n/* harmony export */   \"findChildById\": () => (/* binding */ findChildById),\n/* harmony export */   \"findChildIndexById\": () => (/* binding */ findChildIndexById)\n/* harmony export */ });\nfunction makeProperty(component, propName, defaultValue, getOverride, setOverride) {\n  let existingValue;\n\n  if (component.hasOwnProperty(propName)) {\n    existingValue = component[propName];\n    delete component[propName];\n  } // define the getters and setters\n\n\n  const internalPropName = \"_\" + propName;\n  Object.defineProperty(component, propName, {\n    get() {\n      return getOverride ? getOverride() : component[internalPropName];\n    },\n\n    set(value) {\n      if (setOverride) setOverride(value);else component[internalPropName] = value;\n    }\n\n  });\n  const initialValue = existingValue != undefined ? existingValue : defaultValue;\n  if (initialValue != undefined) component[propName] = initialValue;\n}\n\nasync function loadFont(url) {\n  await new Promise((resolve, reject) => {\n    let link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = url;\n    link.addEventListener(\"load\", resolve);\n    link.addEventListener(\"abort\", reject);\n    link.addEventListener(\"error\", reject);\n    document.head.appendChild(link);\n  });\n} // merges array of json objects into the DOM\n// each item must have an \"id\" property\n\n\nfunction mergeDOM(parentDOM, items = [], onCreateUpdate) {\n  // grab our DOM child elements\n  let children = parentDOM.children; // speed optimization for items.length == 1 and children.length == 1\n  // (this will be a very common case)\n\n  if (children.length == 1 && items.length == 1) {\n    const item = items[0];\n    let itemDOM = children[0]; // if the item id and the child's srcObject id match, then this is a quick update and we can dispense with everything else\n    // otherwise, we'll fall through and go through the full merge procedure\n\n    if (itemDOM.srcObject && item.id == itemDOM.srcObject.id) {\n      onCreateUpdate(item, itemDOM);\n      itemDOM.srcObject = item;\n      return;\n    }\n  } // check for array length matching up front\n  // pruning up front will make adding/updating faster and the check is cheap.\n  // note that when replacing items, this check will fail and pruning will happen AFTER adding/updating\n\n\n  if (children.length > items.length) pruneChildren(children, items); // add or update each item\n\n  items.forEach((item, arrayIndex) => {\n    const domIndex = findChildIndexById(children, item.id);\n    let itemDOM = domIndex == -1 ? null : children[domIndex]; // if itemDOM's srcObject matches this item, it doesn't need an update\n    // inversely, we need to update if itemDOM is null or the srcObject is different than item\n\n    if (!itemDOM || itemDOM.srcObject != item) {\n      itemDOM = onCreateUpdate(item, itemDOM); // if itemDOM is null after calling onCreateUpdate, there's an error.  bail out.\n\n      if (!itemDOM) return; // otherwise, update srcObject\n\n      itemDOM.srcObject = item;\n    }\n\n    if (domIndex == -1) {\n      // if we're adding, ensure itemDOM has an ID specified\n      itemDOM.id = item.id; // insert the new DOM element\n\n      if (arrayIndex < children.length) parentDOM.insertBefore(itemDOM, children[arrayIndex]);else parentDOM.appendChild(itemDOM);\n    } else if (domIndex != arrayIndex) {\n      // we need to move the itemDOM to a new location\n      // this one call will simultaneously remove and re-insert\n      parentDOM.insertBefore(itemDOM, children[arrayIndex]);\n    } else {// do nothing - itemDOM has been updated and doesn't need to be moved\n    }\n  }); // check for array length again - if they don't match because we REPLACED an element, then we'll prune\n\n  if (children.length > items.length) pruneChildren(children, items);\n}\n\nfunction pruneChildren(children, items) {\n  // first, remove any items that are missing if necessary\n  const idsToKeep = items.map(r => r.id); // collect the children to remove in an array (can't modify the array in this loop)\n\n  let childrenToRemove = [];\n\n  for (const child of children) {\n    if (!idsToKeep.includes(child.id)) {\n      childrenToRemove.push(child);\n    }\n  } // and finally remove them from the DOM\n\n\n  for (const child of childrenToRemove) child.remove();\n}\n\nfunction findChildById(parent, id) {\n  for (const item of parent.children) {\n    if (item.id == id) {\n      return item;\n    }\n  }\n\n  return null;\n}\n\nfunction findChildIndexById(nodeList, id) {\n  for (let i = 0; i < nodeList.length; i++) {\n    if (nodeList[i].id == id) return i;\n  }\n\n  return -1;\n}\n\n\n\n//# sourceURL=webpack://OverlayEditor/./src/browser-renderer/utilities.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/browser-renderer/BrowserRenderer.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});